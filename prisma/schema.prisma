generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  password     String
  name         String
  role         Role         @default(BUYER)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  projects     Project[]
  bids         Bid[]
  deliverables Deliverable[]
}

model Project {
  id            Int           @id @default(autoincrement())
  title         String
  description   String
  budgetMin     Float
  budgetMax     Float
  deadline      DateTime
  buyerId       Int
  buyer         User          @relation(fields: [buyerId], references: [id])
  bids          Bid[]
  status        ProjectStatus @default(OPEN)
  selectedBidId Int?          @unique
  selectedBid   Bid?          @relation("SelectedBid", fields: [selectedBidId], references: [id])
  deliverables  Deliverable[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Bid {
  id              Int      @id @default(autoincrement())
  amount          Float
  message         String?  @default("")
  projectId       Int
  project         Project  @relation(fields: [projectId], references: [id])
  sellerId        Int
  seller          User     @relation(fields: [sellerId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  selectedProject Project? @relation("SelectedBid")
}

model Deliverable {
  id        Int      @id @default(autoincrement())
  fileUrl   String   // URL of the uploaded file (e.g., PDF on Cloudinary)
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])
  sellerId  Int
  seller    User     @relation(fields: [sellerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  BUYER
  SELLER
}

enum ProjectStatus {
  OPEN
  ASSIGNED
  COMPLETED
}